---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: rpm --import
  rpm_key:
    key: "{{ item.key }}"
    fingerprint: "{{ item.fingerprint }}"
    state: "{{ item.state }}"
  loop: "{{ _rpm_key[kernel_release] }}"
  register: result
  until: result is succeeded

- name: prepare directories
  file:
    dest: "{{ item.dest | dirname }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop: "{{ _rpm_download[kernel_release] }}"
  notify:
    - kernel | redhat | download archive

- name: flush handlers
  meta: flush_handlers

- name: yum install *.rpm
  shell: |
    set -euo pipefail
    exec &> >(tee -a {{ item.dest }}.log)
    yum install -y {{ item.dest }}
  args:
    executable: "/bin/bash"
    creates: "{{ item.dest }}.log"
  loop: "{{ _rpm_download[kernel_release] }}"
  changed_when: false
  ignore_errors: true

- name: yum-config-manager --add-repo
  yum_repository:
    file: "{{ item.file }}"
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    baseurl: "{{ item.baseurl }}"
    enabled: "{{ item.enabled }}"
    priority: "{{ item.priority }}"
    gpgcheck: "{{ item.gpgcheck }}"
    gpgkey: "{{ item.gpgkey }}"
    state: "{{ item.state }}"
  loop: "{{ _yum_repository[kernel_release] }}"

- name: yum install
  yum:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    enablerepo: "{{ item.enablerepo | default(None) or omit }}"
  loop: "{{ _yum[kernel_release] }}"
  register: result
  until: result is succeeded
  notify:
    - kernel | update-grub
    - kernel | update-initramfs -c -k all
